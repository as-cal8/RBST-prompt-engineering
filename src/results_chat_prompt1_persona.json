[
    {
        "Requirement": "The MapComponent shall support different types of map layers (e.g. terrain satellite).",
        "testObjective": "Verify that the MapComponent supports different types of map layers (e.g. terrain satellite).",
        "preconditions": [
            "The application must be running.",
            "The MapComponent is configured to display a map."
        ],
        "testSteps": [
            "1. Open the application.",
            "2. Access the MapComponent.",
            "3. Select a map layer type (e.g. terrain satellite).",
            "4. Verify that the selected map layer is displayed correctly."
        ],
        "expectedResult": "The MapComponent displays the selected map layer correctly.",
        "testCaseID": 0,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The MapComponent shall support different types of map layers (e.g.  terrain  satellite)"
        ]
    },
    {
        "Requirement": "The MissionPlanner shall execute flight plans for multiple UAVs concurrently.",
        "testObjective": "Verify that the MissionPlanner executes flight plans for multiple UAVs concurrently.",
        "preconditions": [
            "The application must be running.",
            "At least two flight plans are available.",
            "Two or more UAVs are selected to be used."
        ],
        "testSteps": [
            "1. Add two or more flight plans.",
            "2. Select two or more UAVs to be used.",
            "3. Execute flight plans for the selected UAVs concurrently.",
            "4. Wait until the MissionPlanner has executed the flight plans for all selected UAVs concurrently.",
            "5. Verify that all flight plans are executed for each selected UAV.",
            "6. Verify that the MissionPlanner executed the flight plans for multiple UAVs concurrently."
        ],
        "expectedResult": "All selected flight plans are executed for each selected UAV concurrently by the MissionPlanner.",
        "testCaseID": 1,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The MissionPlanner shall execute flight plans for multiple UAVs concurrently."
        ]
    },
    {
        "Requirement": "The GCS shall transmit the UAV's properties to the GCSMiddleware.",
        "testObjective": "Verify that the GCS transmits the UAV's properties to the GCSMiddleware.",
        "preconditions": [
            "The application must be running.",
            "A UAV is in flight."
        ],
        "testSteps": [
            "1. Add a UAV to the application.",
            "2. Ensure the UAV is in flight.",
            "3. Verify that the GCS transmits the UAV's properties to the GCSMiddleware."
        ],
        "expectedResult": "The GCS has transmitted the UAV's properties to the GCSMiddleware.",
        "testCaseID": 2,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The GCS shall transmit the UAV's properties to the GCSMiddleware"
        ]
    },
    {
        "Requirement": "The GCS shall transmit the UAV's current location to the GCSMiddleware.",
        "testObjective": "Verify that the GCS transmits the UAV's current location to the GCSMiddleware.",
        "preconditions": [
            "The application must be running.",
            "A UAV is currently in operation."
        ],
        "testSteps": [
            "1. Ensure that a UAV is in operation.",
            "2. Initiate a location update request from the GCS.",
            "3. Wait until the GCSMiddleware receives the location update.",
            "4. Verify that the GCSMiddleware logs the location update.",
            "5. Verify that the GCSMiddleware communicates with the UAV to confirm the location data."
        ],
        "expectedResult": "The GCS has successfully transmitted the UAV's current location to the GCSMiddleware.",
        "testCaseID": 3,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The GCS shall transmit the UAV's current location to the GCSMiddleware"
        ]
    },
    {
        "Requirement": "The GCS shall report newly connected UAVs to the GCSMiddleware.",
        "testObjective": "Verify that the GCS correctly reports newly connected UAVs to the GCSMiddleware.",
        "preconditions": [
            "The application must be running.",
            "A new UAV has been connected to the system."
        ],
        "testSteps": [
            "1. Connect a new UAV to the system.",
            "2. As an admin, verify that the GCS reports the new UAV to the GCSMiddleware.",
            "3. Verify that the GCSMiddleware logs the new UAV's presence.",
            "4. Check that the GCS has a record of the new UAV in its database."
        ],
        "expectedResult": "The GCS correctly reports the newly connected UAV to the GCSMiddleware, and the GCSMiddleware logs the new UAV's presence and maintains a record of the new UAV in its database.",
        "testCaseID": 4,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The GCS shall report newly connected UAVs to the GCSMiddleware."
        ]
    },
    {
        "Requirement": "The GCS shall assign a message frequency for all UAVs.",
        "testObjective": "Verify that the GCS assigns a message frequency for all UAVs.",
        "preconditions": [
            "The application must be running.",
            "At least one UAV is connected to the system."
        ],
        "testSteps": [
            "1. Connect one or more UAVs to the system.",
            "2. Initiate the assignment process by the GCS.",
            "3. Verify that each connected UAV has a message frequency configured by the GCS.",
            "4. Repeat the process for additional UAVs if necessary."
        ],
        "expectedResult": "All connected UAVs have their message frequencies assigned by the GCS.",
        "testCaseID": 5,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The GCS shall assign a message frequency for all UAVs."
        ]
    },
    {
        "testCaseID": 6,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When the GCS receives a UAV command from the GCSMiddleware  the GCS shall forward the command to the respective UAV."
        ]
    },
    {
        "testCaseID": 7,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When the connection to the GCS from the GCSMiddleware is lost  the GCSMiddleware shall notify Dronology and deactivate all associated UAVs."
        ]
    },
    {
        "Requirement": "The GCSMiddleware shall forward commands sent from Dronology to a GCS.",
        "testObjective": "Verify that the GCSMiddleware forwards commands sent from Dronology to a GCS.",
        "preconditions": [
            "The application must be running.",
            "Dronology is sending a command to the GCS.",
            "A GCS is configured to receive commands."
        ],
        "testSteps": [
            "1. Send a command from Dronology to the GCS.",
            "2. Verify that the command is received by the GCS.",
            "3. Verify that the command is processed by the GCS."
        ],
        "expectedResult": "The GCS receives and processes the command from Dronology.",
        "testCaseID": 8,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The GCSMiddleware shall forward commands sent from Dronology to a GCS"
        ]
    },
    {
        "testCaseID": 9,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The GCSMiddleware shall handle state messages   monitoring messages  and mode change messages  received from an GCS."
        ]
    },
    {
        "testCaseID": 10,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The GCSMiddleware  shall follow a predefined set of steps to establish a connection between a GCS and Dronology"
        ]
    },
    {
        "Requirement": "The GCSMiddleware shall handle multiple GCS",
        "testObjective": "Verify that the GCSMiddleware correctly processes multiple GCS requests.",
        "preconditions": [
            "The application must be running.",
            "Multiple GCS instances are available.",
            "The middleware is configured to handle multiple GCS instances."
        ],
        "testSteps": [
            "1. Start the application.",
            "2. Add multiple GCS instances.",
            "3. Send a request to the middleware.",
            "4. Wait until the middleware processes the request and returns a response.",
            "5. Verify that all GCS instances have been processed correctly."
        ],
        "expectedResult": "The GCSMiddleware correctly processes and responds to multiple GCS requests.",
        "testCaseID": 11,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The GCSMiddleware shall handle multiple GCS"
        ]
    },
    {
        "Requirement": "The DronologyRuntimeMonitor shall be able to receive messages from any Dronology component.",
        "testObjective": "Verify that the DronologyRuntimeMonitor can receive messages from any Dronology component.",
        "preconditions": [
            "The application must be running.",
            "There are active components in Dronology."
        ],
        "testSteps": [
            "1. Identify a Dronology component.",
            "2. Send a message to that component.",
            "3. Verify that the message is received by the DronologyRuntimeMonitor."
        ],
        "expectedResult": "Messages from any Dronology component are received by the DronologyRuntimeMonitor.",
        "testCaseID": 12,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The DronologyRuntimeMonitor shall be able to receive messages from any Dronology component"
        ]
    },
    {
        "Requirement": "When a new monitoring message is received the DronologyRuntimeMonitor shall forward the message to all subscribed clients.",
        "testObjective": "Verify that when a new monitoring message is received the DronologyRuntimeMonitor forwards the message to all subscribed clients.",
        "preconditions": [
            "The application must be running.",
            "There is at least one monitoring message in the queue.",
            "All clients are subscribed to receive messages from DronologyRuntimeMonitor."
        ],
        "testSteps": [
            "1. Ensure that a new monitoring message is added to the queue.",
            "2. Trigger the receipt of the new monitoring message by the DronologyRuntimeMonitor.",
            "3. Verify that all subscribed clients receive the new monitoring message through their respective channels."
        ],
        "expectedResult": "All subscribed clients receive the new monitoring message from DronologyRuntimeMonitor.",
        "testCaseID": 13,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When a new monitoring message is received the DronologyRuntimeMonitor shall forward the message to all subscribed clients"
        ]
    },
    {
        "Requirement": "The DronologyRuntimeMonitor shall provide functionality to retrieve monitoring messages and distribute them to clients.",
        "testObjective": "Verify that the DronologyRuntimeMonitor retrieves and distributes monitoring messages to clients.",
        "preconditions": [
            "The application must be running.",
            "The DronologyRuntimeMonitor is configured to retrieve monitoring messages."
        ],
        "testSteps": [
            "1. Configure the DronologyRuntimeMonitor to retrieve monitoring messages.",
            "2. Start the application.",
            "3. Monitor messages are being generated by the application.",
            "4. As a client, check if the DronologyRuntimeMonitor is receiving messages.",
            "5. Verify that the DronologyRuntimeMonitor distributes messages to clients."
        ],
        "expectedResult": "DronologyRuntimeMonitor retrieves and distributes monitoring messages to clients.",
        "testCaseID": 14,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The DronologyRuntimeMonitor shall provide functionality to retrieve monitoring messages and distribute them to clients"
        ]
    },
    {
        "Requirement": "The RealTimeFlightUI shall notify users when an emergency occurs.",
        "testObjective": "Verify that the RealTimeFlightUI notifies users when an emergency occurs.",
        "preconditions": [
            "The application must be running.",
            "An emergency has occurred."
        ],
        "testSteps": [
            "1. Simulate an emergency.",
            "2. As a user, trigger emergency notification.",
            "3. Wait until RealTimeFlightUI notifies users."
        ],
        "expectedResult": "Emergency notification is triggered and displayed in RealTimeFlightUI.",
        "testCaseID": 15,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The RealTimeFlightUI shall notify users when an emergency occurs."
        ]
    },
    {
        "Requirement": "The RealTimeFlightUI shall allow users to follow one or multiple UAVs on the map.",
        "testObjective": "Verify that the RealTimeFlightUI allows users to follow one or multiple UAVs on the map.",
        "preconditions": [
            "The application must be running.",
            "The map interface is visible and active."
        ],
        "testSteps": [
            "1. Launch the application.",
            "2. Open the map interface.",
            "3. Add one or more UAVs to the map.",
            "4. Select one or more UAVs to follow.",
            "5. Verify that the selected UAVs are highlighted or marked as being followed on the map."
        ],
        "expectedResult": "Users can follow one or multiple UAVs on the map interface.",
        "testCaseID": 16,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The RealTimeFlightUI shall allow users to follow one or multiple UAVs on the map."
        ]
    },
    {
        "Requirement": "The RealTimeFlightUI shall allow users to perform emergency operations (e.g. hovering multiple UAVs, sending multiple UAVs to home) to a group of UAVs.",
        "testObjective": "Verify that the RealTimeFlightUI allows users to perform emergency operations (e.g. hovering multiple UAVs, sending multiple UAVs to home) on a group of UAVs.",
        "preconditions": [
            "The application must be running.",
            "There are multiple UAVs in flight."
        ],
        "testSteps": [
            "1. Select a group of UAVs.",
            "2. Perform emergency operation (hover, send to home).",
            "3. Verify that all selected UAVs are in the desired state (hovered or returned to home)."
        ],
        "expectedResult": "Emergency operations are successfully performed on all selected UAVs.",
        "testCaseID": 17,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The RealTimeFlightUI shall allow users to perform emergency operations (e.g. hovering multiple UAVs  sending multiple UAVs to home) to a group of UAVs"
        ]
    },
    {
        "Requirement": "The RealTimeFlightUI shall allow users to apply flight operations to one or more selected UAVs.",
        "testObjective": "Verify that the RealTimeFlightUI allows users to apply flight operations to one or more selected UAVs.",
        "preconditions": [
            "The application must be running.",
            "At least one UAV is selected in the UI."
        ],
        "testSteps": [
            "1. Select one or more UAVs from the list.",
            "2. As a user applies flight operations to the selected UAV(s).",
            "3. Verify that flight operations are successfully applied to the selected UAV(s)."
        ],
        "expectedResult": "Flight operations are successfully applied to one or more selected UAVs.",
        "testCaseID": 18,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The RealTimeFlightUI shall allow users to apply flight operations to one or more selected UAVs."
        ]
    },
    {
        "Requirement": "The RealTimeFlightUI shall display all currently active flight plans on the map.",
        "testObjective": "Verify that the RealTimeFlightUI displays all currently active flight plans on the map.",
        "preconditions": [
            "The application must be running.",
            "There are one or more active flight plans active."
        ],
        "testSteps": [
            "1. Open the RealTimeFlightUI.",
            "2. Identify all active flight plans.",
            "3. Ensure that the RealTimeFlightUI displays all active flight plans on the map.",
            "4. Verify that the display updates in real-time as flight plans are added or removed."
        ],
        "expectedResult": "All currently active flight plans are displayed on the map without omission or delay.",
        "testCaseID": 19,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The RealTimeFlightUI shall display all currently active flight plans on the map."
        ]
    },
    {
        "Requirement": "The RealTimeFlightUI shall display the name and status of all currently activated UAVs.",
        "testObjective": "Verify that the RealTimeFlightUI displays the name and status of all currently activated UAVs.",
        "preconditions": [
            "The application must be running.",
            "There are currently activated UAVs."
        ],
        "testSteps": [
            "1. Launch the application.",
            "2. Activate all currently activated UAVs.",
            "3. Observe the RealTimeFlightUI to check that the name and status of all currently activated UAVs are displayed."
        ],
        "expectedResult": "The RealTimeFlightUI displays the name and status of all currently activated UAVs.",
        "testCaseID": 20,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The RealTimeFlightUI shall display the name and status of all currently activated UAVs"
        ]
    },
    {
        "Requirement": "When the RouteCreationUI is loaded a list of all existing routes shall be displayed.",
        "testObjective": "Verify that when RouteCreationUI is loaded a list of all existing routes is displayed.",
        "preconditions": [
            "The application must be running.",
            "RouteCreationUI is loaded."
        ],
        "testSteps": [
            "1. Load the RouteCreationUI.",
            "2. Verify that a list of all existing routes is displayed."
        ],
        "expectedResult": "A list of all existing routes is displayed in the RouteCreationUI.",
        "testCaseID": 21,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When the RouteCreationUI is loaded a list of all existing routes shall be displayed."
        ]
    },
    {
        "Requirement": "The RouteCreationUI shall allow a user to delete a route.",
        "testObjective": "Verify that the RouteCreationUI allows a user to delete a route.",
        "preconditions": [
            "The application must be running.",
            "A route is created and exists in the application."
        ],
        "testSteps": [
            "1. Create a route.",
            "2. As a user, select the route to delete it.",
            "3. Click the delete button or select delete from the menu.",
            "4. Verify that the route is deleted from the application."
        ],
        "expectedResult": "The route is successfully deleted from the application.",
        "testCaseID": 22,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The RouteCreationUI shall allow a user to delete a route."
        ]
    },
    {
        "Requirement": "The RouteCreationUI shall allow the user to create and modify a route.",
        "testObjective": "Verify that the RouteCreationUI allows users to create and modify routes.",
        "preconditions": [
            "The application must be running.",
            "There is an existing route or a new route is available for creation."
        ],
        "testSteps": [
            "1. Open the RouteCreationUI.",
            "2. Create a new route.",
            "3. Modify an existing route.",
            "4. Save the created or modified route."
        ],
        "expectedResult": "The RouteCreationUI successfully allows the user to create and modify routes without errors.",
        "testCaseID": 23,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The RouteCreationUI shall allow the user to create and modify a route."
        ]
    },
    {
        "Requirement": "When requested the RouteCreationUI shall send a newly created or modified route to dronology.",
        "testObjective": "Verify that when a user requests the creation of a route, the RouteCreationUI sends the newly created or modified route to Dronology.",
        "preconditions": [
            "The application must be running.",
            "A route is being created or modified."
        ],
        "testSteps": [
            "1. Start the application.",
            "2. Create or modify a route.",
            "3. Wait until RouteCreationUI sends the route to Dronology."
        ],
        "expectedResult": "The newly created or modified route is sent to Dronology via RouteCreationUI.",
        "testCaseID": 24,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When requested  the RouteCreationUI shall send a newly created or modified route to dronology."
        ]
    },
    {
        "testCaseID": 25,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. Each route shall include a unique ID  a textual description  and a set of waypoints  all of which are editable in the UI."
        ]
    },
    {
        "Requirement": "The RouteCreationUI shall only accept valid altitude and speed values for waypoint.",
        "testObjective": "Verify that the RouteCreationUI rejects invalid altitude or speed values for waypoints.",
        "preconditions": [
            "The application must be running.",
            "A waypoint is selected or created."
        ],
        "testSteps": [
            "1. Attempt to add a waypoint with invalid altitude (e.g., negative).",
            "2. Attempt to add a waypoint with invalid speed (e.g., zero).",
            "3. Verify that the RouteCreationUI displays an error message indicating invalid input for the respective parameter.",
            "4. Repeat the process with valid altitude and speed values to ensure proper acceptance."
        ],
        "expectedResult": "Invalid altitude or speed values for waypoints are rejected with corresponding error messages, valid values are accepted without errors.",
        "testCaseID": 26,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The RouteCreationUI shall only accept valid altitude and speed values for waypoint."
        ]
    },
    {
        "Requirement": "The RouteCreationUI shall distinguish between starting, ending, and intermediate waypoint markers.",
        "testObjective": "Verify that the RouteCreationUI correctly distinguishes between starting, ending, and intermediate waypoint markers.",
        "preconditions": [
            "The application must be running.",
            "At least one route is created with multiple waypoints."
        ],
        "testSteps": [
            "1. Create a route with at least three waypoints.",
            "2. Identify the first waypoint as starting point.",
            "3. Identify the last waypoint as ending point.",
            "4. Verify that intermediate waypoints are correctly marked with appropriate indicators.",
            "5. Cancel the route.",
            "6. Verify that all waypoints are properly marked after route cancellation."
        ],
        "expectedResult": "All waypoints are correctly identified as starting, ending, and intermediate markers.",
        "testCaseID": 27,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The RouteCreationUI shall distinguish between starting  ending  and intermediate waypoint markers."
        ]
    },
    {
        "Requirement": "When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.",
        "testObjective": "Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.",
        "preconditions": [
            "The application must be running.",
            "One or more flight plans are pending."
        ],
        "testSteps": [
            "1. Add one or more flight plans.",
            "2. As a user cancels a flight plan.",
            "3. Wait until RouteAssignmentUI notifies Dronology."
        ],
        "expectedResult": "Flight plan is canceled and Dronology received notification from RouteAssignmentUI.",
        "testCaseID": 28,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When a user  cancels a pending flight plan the RouteAssignmentUI shall notify Dronology."
        ]
    },
    {
        "testCaseID": 29,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. A user may reorder routes or remove flight plans assigned to a UAV as long as the flight has not started execution."
        ]
    },
    {
        "Requirement": "When a UAV is selected the RouteAssignmentUI shall display its active flight plans.",
        "testObjective": "Verify that when a UAV is selected the RouteAssignmentUI displays its active flight plans.",
        "preconditions": [
            "The application must be running.",
            "A UAV must be selected in the list."
        ],
        "testSteps": [
            "1. Select a UAV from the available list.",
            "2. Verify that the RouteAssignmentUI displays active flight plans for the selected UAV.",
            "3. Ensure that the displayed flight plans are accurate and up-to-date."
        ],
        "expectedResult": "The RouteAssignmentUI correctly displays the active flight plans for the selected UAV.",
        "testCaseID": 30,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When a UAV is selected  the RouteAssignmentUI shall display its active flight plans."
        ]
    },
    {
        "Requirement": "When requested by the user the RouteAssignmentUI shall display details about the selected UAV and its flight plans.",
        "testObjective": "Verify that when a user requests the display of a UAV's details and its flight plans, the RouteAssignmentUI shows the correct information.",
        "preconditions": [
            "The application must be running.",
            "A user selects a UAV to view."
        ],
        "testSteps": [
            "1. Open the application.",
            "2. Select a UAV from the list.",
            "3. As a user requests the display of flight plans for the selected UAV.",
            "4. Verify that the RouteAssignmentUI displays the details about the selected UAV and its flight plans."
        ],
        "expectedResult": "The RouteAssignmentUI correctly displays the selected UAV's details and flight plans information.",
        "testCaseID": 31,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When requested by the user  the RouteAssignmentUI shall display details about the selected UAV and its flight plans."
        ]
    },
    {
        "Requirement": "When a route is assigned or removed from a UAV the RouteAssignmentUI shall notify Dronology.",
        "testObjective": "Verify that when a route is assigned or removed from a UAV the RouteAssignmentUI notifies Dronology.",
        "preconditions": [
            "The application must be running.",
            "There is at least one UAV active with routes assigned or to be assigned."
        ],
        "testSteps": [
            "1. Open the RouteAssignmentUI.",
            "2. Assign a route to a UAV or remove a route from a UAV.",
            "3. Wait until the RouteAssignmentUI notifies Dronology."
        ],
        "expectedResult": "Route assignment or removal is confirmed and Dronology has been notified via the RouteAssignmentUI.",
        "testCaseID": 32,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When a route is assigned or removed from a UAV  the RouteAssignmentUI shall notify Dronology."
        ]
    },
    {
        "Requirement": "The RouteAssignmentUI shall provide means to select an existing routes and assign them to a UAV.",
        "testObjective": "Verify that the RouteAssignmentUI provides means to select existing routes and assign them to a UAV.",
        "preconditions": [
            "The application must be running.",
            "At least one route is available in the route library."
        ],
        "testSteps": [
            "1. Access the RouteAssignmentUI.",
            "2. Select an existing route from the route library.",
            "3. Assign the selected route to a UAV.",
            "4. Verify that the route is successfully assigned to the UAV."
        ],
        "expectedResult": "A route has been successfully assigned to the UAV.",
        "testCaseID": 33,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The RouteAssignmentUI shall provide means to select an existing routes and assign them to a UAV."
        ]
    },
    {
        "Requirement": "When loading the map view it shall be positioned at the pre-defined location.",
        "testObjective": "Verify that when the map view is loaded, it is positioned at the pre-defined location.",
        "preconditions": [
            "The application must be running."
        ],
        "testSteps": [
            "1. Ensure the application is running."
        ],
        "expectedResult": "The map view is displayed and positioned at the pre-defined location.",
        "testCaseID": 34,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When loading the map view it shall be positioned at the pre-defined location"
        ]
    },
    {
        "Requirement": "When the VaadinUI is activated the VaadinUI shall be configured according to stored configuration parameters.",
        "testObjective": "Verify that when the VaadinUI is activated the VaadinUI is configured according to stored configuration parameters.",
        "preconditions": [
            "The application must be running.",
            "Configuration parameters are stored."
        ],
        "testSteps": [
            "1. Activate VaadinUI.",
            "2. Wait until VaadinUI is configured according to stored configuration parameters."
        ],
        "expectedResult": "VaadinUI is configured according to stored configuration parameters.",
        "testCaseID": 35,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When the VaadinUI is activated  the VaadinUI shall be configured according to stored configuration parameters."
        ]
    },
    {
        "Requirement": "The UIMiddleware shall accept and activate a mission plan upon request.",
        "testObjective": "Verify that the UIMiddleware accepts and activates a mission plan upon request.",
        "preconditions": [
            "The application must be running.",
            "A mission plan is available for activation."
        ],
        "testSteps": [
            "1. Add a mission plan.",
            "2. As a user requests to activate the mission plan.",
            "3. Verify that the UIMiddleware accepts and activates the mission plan."
        ],
        "expectedResult": "The UIMiddleware has accepted and activated the mission plan as per the request.",
        "testCaseID": 36,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The UIMiddleware shall accept and activate a mission plan upon request."
        ]
    },
    {
        "Requirement": "The UIMiddleware shall enable an existing route to be assigned to an active UAV.",
        "testObjective": "Verify that the UIMiddleware enables an existing route to be assigned to an active UAV.",
        "preconditions": [
            "The application must be running.",
            "There is an existing route defined.",
            "An active UAV is selected."
        ],
        "testSteps": [
            "1. Activate an existing route.",
            "2. Select an active UAV.",
            "3. Enable the route assignment for the active UAV."
        ],
        "expectedResult": "The route is successfully assigned to the active UAV.",
        "testCaseID": 37,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The UIMiddleware shall enable an existing route to be assigned to an active UAV."
        ]
    },
    {
        "Requirement": "The UIMiddleware shall enable the creation and modification of flight routes.",
        "testObjective": "Verify that the UIMiddleware enables the creation and modification of flight routes.",
        "preconditions": [
            "The application must be running.",
            "Flight routes are currently unavailable."
        ],
        "testSteps": [
            "1. Enable the UIMiddleware.",
            "2. Verify that flight routes are available.",
            "3. Modify a flight route.",
            "4. Verify that the modified flight route is available."
        ],
        "expectedResult": "Flight routes can be created and modified through the UIMiddleware.",
        "testCaseID": 38,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The UIMiddleware shall enable the creation and modification of flight routes"
        ]
    },
    {
        "Requirement": "The UIMiddleware accepts commands from UIs and forwards to Dronology.",
        "testObjective": "Verify that the UIMiddleware accepts commands from UIs and forwards them to Dronology.",
        "preconditions": [
            "The application must be running.",
            "There is a command sent by a UI.",
            "Dronology is configured to receive commands."
        ],
        "testSteps": [
            "1. Trigger a command from the UI.",
            "2. Verify that the UIMiddleware receives the command.",
            "3. Verify that the UIMiddleware forwards the command to Dronology.",
            "4. Verify that Dronology processes the command successfully."
        ],
        "expectedResult": "Commands are successfully accepted by UIMiddleware and forwarded to Dronology for processing.",
        "testCaseID": 39,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The UIMiddleware accepts commands from UIs and forwards to Dronology"
        ]
    },
    {
        "Requirement": "The UIMiddleware shall provide a list of all existing routes.",
        "testObjective": "Verify that the UIMiddleware provides a list of all existing routes.",
        "preconditions": [
            "The application must be running."
        ],
        "testSteps": [
            "1. Access the UIMiddleware interface.",
            "2. Click on the 'Routes' tab.",
            "3. Verify that the 'Routes' tab displays a list of all existing routes."
        ],
        "expectedResult": "The UIMiddleware displays a list of all existing routes.",
        "testCaseID": 40,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The UIMiddleware shall provide a list of all existing routes"
        ]
    },
    {
        "Requirement": "The UIMiddleware shall provide a list of all active UAVs.",
        "testObjective": "Verify that the UIMiddleware provides a list of all active UAVs.",
        "preconditions": [
            "The application must be running.",
            "UAVs are active in the system."
        ],
        "testSteps": [
            "1. Identify all active UAVs in the system.",
            "2. Access the UIMiddleware.",
            "3. Retrieve the list of active UAVs from the middleware.",
            "4. Verify the list matches the active UAVs in the system."
        ],
        "expectedResult": "The UIMiddleware correctly lists all active UAVs.",
        "testCaseID": 41,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The UIMiddleware shall provide a list of all active UAVs"
        ]
    },
    {
        "Requirement": "The ActivityLogger shall log all commands sent to and messages received from a CGS.",
        "testObjective": "Verify that the ActivityLogger logs all commands sent to and messages received from a CGS.",
        "preconditions": [
            "The application must be running.",
            "A CGS is connected or configured."
        ],
        "testSteps": [
            "1. Send a command to the CGS.",
            "2. Receive a message from the CGS.",
            "3. Verify that the ActivityLogger logs both the command and message."
        ],
        "expectedResult": "The ActivityLogger logs all commands sent to and messages received from a CGS.",
        "testCaseID": 42,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The ActivityLogger shall log all commands sent to and messages received from a CGS."
        ]
    },
    {
        "Requirement": "The ActivityLogger shall log all flight plan related events.",
        "testObjective": "Verify that the ActivityLogger logs all flight plan related events.",
        "preconditions": [
            "The application must be running.",
            "Flight plans are being managed.",
            "ActivityLogger is enabled."
        ],
        "testSteps": [
            "1. Enable ActivityLogger.",
            "2. Add flight plans.",
            "3. Perform actions that trigger flight plan events.",
            "4. Verify that ActivityLogger has logged all relevant flight plan events."
        ],
        "expectedResult": "ActivityLogger has logged all flight plan related events.",
        "testCaseID": 43,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The ActivityLogger shall log all flight plan related events."
        ]
    },
    {
        "testCaseID": 44,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The InternalSimulator shall approximate the state of the battery"
        ]
    },
    {
        "testCaseID": 45,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When given a landing command the InternalSimulator shall move the UAV from to the ground altitude corresponding to its current longitude and latitude."
        ]
    },
    {
        "testCaseID": 46,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When given a goto command  the InternalSimulator shall update the location of the UAV at increments of {{SIMULATIONSTEPSIZE}} meters  moving it towards the target destination until the destination is reached."
        ]
    },
    {
        "testCaseID": 47,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When given a takeoff command the InternalSimulator shall move the UAV to the takeoff altitude corresponding to its current longitude and latitude."
        ]
    },
    {
        "Requirement": "The InternalSimulator shall approximate the behavior of a UAV.",
        "testObjective": "Verify that the InternalSimulator approximates the behavior of a UAV.",
        "preconditions": [
            "The application must be running.",
            "A UAV is available for simulation."
        ],
        "testSteps": [
            "1. Select a UAV model from the available options.",
            "2. Configure the simulation environment to mimic the operational conditions of the selected UAV.",
            "3. Run the simulation and observe the behavior of the InternalSimulator.",
            "4. Compare the InternalSimulator's behavior with that of the selected UAV under the same conditions."
        ],
        "expectedResult": "The InternalSimulator's behavior closely matches the selected UAV's behavior under the operational conditions.",
        "testCaseID": 48,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The InternalSimulator shall approximate the behavior of a UAV."
        ]
    },
    {
        "testCaseID": 49,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The UAVRegistrationManager shall store UAV meta-data information  such as the UAV's technical characteristics"
        ]
    },
    {
        "Requirement": "When the maximum numbers of allowed activated UAVs has been reached the UAVActivationManager shall reject any further activation requests.",
        "testObjective": "Verify that when the maximum number of allowed activated UAVs has been reached the UAVActivationManager rejects any further activation requests.",
        "preconditions": [
            "The application must be running.",
            "The maximum number of allowed activated UAVs has been reached."
        ],
        "testSteps": [
            "1. Activate all allowed UAVs.",
            "2. Attempt to activate another UAV.",
            "3. Wait until UAVActivationManager rejects the activation request.",
            "4. Verify that the activation request was rejected."
        ],
        "expectedResult": "No activation request is processed after the maximum number of allowed activated UAVs is reached.",
        "testCaseID": 50,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When the maximum numbers of allowed activated UAVs has been reached  the UAVActivationManager shall reject any further activation requests."
        ]
    },
    {
        "Requirement": "When a UAV is deactivated the UAVActivationManager shall cancel all current and scheduled flight plans.",
        "testObjective": "Verify that when a UAV is deactivated the UAVActivationManager cancels all current and scheduled flight plans.",
        "preconditions": [
            "The application must be running.",
            "A UAV is deactivated."
        ],
        "testSteps": [
            "1. Deactivate one or more UAVs.",
            "2. Wait until the UAVActivationManager cancels all current and scheduled flight plans."
        ],
        "expectedResult": "All current and scheduled flight plans are canceled by the UAVActivationManager.",
        "testCaseID": 51,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When a UAV is deactivated the UAVActivationManager shall cancel all current and scheduled flight plans"
        ]
    },
    {
        "Requirement": "The VehicleCore shall support virtual UAVs.",
        "testObjective": "Verify that the VehicleCore supports virtual UAVs.",
        "preconditions": [
            "The application must be running.",
            "Virtual UAVs are defined in the system."
        ],
        "testSteps": [
            "1. Add a virtual UAV configuration.",
            "2. Activate the virtual UAV.",
            "3. Verify that the virtual UAV is supported by VehicleCore.",
            "4. Deactivate the virtual UAV.",
            "5. Verify that the virtual UAV is no longer supported by VehicleCore."
        ],
        "expectedResult": "Virtual UAV is supported by VehicleCore.",
        "testCaseID": 52,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The VehicleCore shall support virtual UAVs"
        ]
    },
    {
        "Requirement": "The VehicleCore shall support UAVs connected via the GCS.",
        "testObjective": "Verify that the VehicleCore supports UAVs connected via the GCS.",
        "preconditions": [
            "The application must be running.",
            "UAVs are connected via the GCS."
        ],
        "testSteps": [
            "1. Connect one or more UAVs to the GCS.",
            "2. As the application runs, the VehicleCore processes the connection.",
            "3. Verify that the VehicleCore supports the connection established by the GCS.",
            "4. As the application runs, the VehicleCore maintains the connection established by the GCS.",
            "5. As the application runs, the VehicleCore disconnects from the GCS if the connection is lost.",
            "6. Verify that the VehicleCore disconnects from the GCS if the connection is lost.",
            "7. As the application runs, the VehicleCore processes disconnections from the GCS.",
            "8. Verify that the VehicleCore processes disconnections from the GCS."
        ],
        "expectedResult": "The VehicleCore successfully supports and maintains connections between UAVs via the GCS, including handling disconnections.",
        "testCaseID": 53,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The VehicleCore shall support UAVs connected via the GCS"
        ]
    },
    {
        "Requirement": "When a group of UAVs are assigned flight patterns as part of a mission the system shall provide a warning if any paths overlap.",
        "testObjective": "Verify that when a group of UAVs are assigned flight patterns as part of a mission the system provides a warning if any paths overlap.",
        "preconditions": [
            "The application must be running.",
            "A mission has been initiated with flight patterns assigned to multiple UAVs.",
            "Flight patterns for each UAV have been defined.",
            "The paths of any two UAVs' flight patterns overlap.",
            "The system is configured to monitor for path overlaps."
        ],
        "testSteps": [
            "1. Initiate a mission with flight patterns for multiple UAVs.",
            "2. Define flight patterns for each UAV ensuring that at least two flight paths overlap.",
            "3. Monitor the system for any warnings related to overlapping flight paths.",
            "4. As a system monitor, confirm that a warning is displayed when two or more flight paths overlap.",
            "5. Verify that the warning indicates the specific overlapping flight paths for each pair of UAVs.",
            "6. As a system monitor, confirm that the warning persists even if the flight patterns are adjusted but still overlap.",
            "7. As a system monitor, confirm that the warning is cleared when flight patterns are modified in a way that no longer overlaps.",
            "8. As a system monitor, confirm that the warning is cleared when flight patterns are completely removed from the mission."
        ],
        "expectedResult": "The system correctly provides a warning when any flight paths overlap, and properly disposes of the warning when paths are modified or removed.",
        "testCaseID": 54,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When a group of UAVs are assigned flight patterns as part of a mission  the system shall provide a warning if any paths overlap."
        ]
    },
    {
        "testCaseID": 55,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. If requested  the SingleUAVFlightPlanScheduler shall abort the currently executing flight plan of an UAV"
        ]
    },
    {
        "Requirement": "If a UAV does not have any pending flight plans then when it reaches the final waypoint of its current flight plan the SingleUAVFlightPlanScheduler shall notify the UAV to hover in place.",
        "testObjective": "Verify that when a UAV reaches the final waypoint of its current flight plan without any pending flight plans the SingleUAVFlightPlanScheduler notifies the UAV to hover.",
        "preconditions": [
            "The application must be running.",
            "A single UAV is in the system.",
            "No pending flight plans are present for the UAV.",
            "The UAV is at the final waypoint of its current flight plan."
        ],
        "testSteps": [
            "1. Start the application.",
            "2. Add a single flight plan to a UAV.",
            "3. Ensure the UAV is at the final waypoint of the flight plan.",
            "4. Trigger the completion of the flight plan.",
            "5. Observe if the SingleUAVFlightPlanScheduler notifies the UAV to hover in place.",
            "6. Verify that the UAV hovers in place without any issues."
        ],
        "expectedResult": "When the UAV reaches the final waypoint without pending flight plans, the SingleUAVFlightPlanScheduler notifies it to hover in place.",
        "testCaseID": 56,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. If a UAV does not have any pending flight plans  then when it reaches the final waypoint of its current flight plan  the SingleUAVFlightPlanScheduler shall notify the UAV to hover in place."
        ]
    },
    {
        "testCaseID": 57,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. If a scheduled flight is not manually assigned to a UAV  the SingleUAVFlightPlanScheduler shall assign the route automatically to an UAV"
        ]
    },
    {
        "testCaseID": 58,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. If a route contains a specific {{UAVID}}  the SingleUAVFlightPlanScheduler shall assign the route to the given UAV."
        ]
    },
    {
        "Requirement": "When requested the SingleUAVFlightPlanScheduler shall schedule a route for execution.",
        "testObjective": "Verify that when the SingleUAVFlightPlanScheduler is requested to schedule a route for execution, it successfully does so.",
        "preconditions": [
            "The application must be running.",
            "The SingleUAVFlightPlanScheduler must be configured to schedule a route for execution."
        ],
        "testSteps": [
            "1. Request the SingleUAVFlightPlanScheduler to schedule a route for execution.",
            "2. Verify that the scheduler is in a scheduled state.",
            "3. Check that the route is being executed successfully."
        ],
        "expectedResult": "The SingleUAVFlightPlanScheduler successfully schedules and executes the route.",
        "testCaseID": 59,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When requested  the SingleUAVFlightPlanScheduler shall schedule a route for execution."
        ]
    },
    {
        "Requirement": "When requested if a mission is currently active the MissionPlanner shall cancel the active mission.",
        "testObjective": "Verify that when a mission is currently active the MissionPlanner cancels the active mission.",
        "preconditions": [
            "The application must be running.",
            "One or more missions are active."
        ],
        "testSteps": [
            "1. Add one or more active missions.",
            "2. Request to cancel the active mission.",
            "3. Wait until MissionPlanner cancels the active mission."
        ],
        "expectedResult": "The active mission is successfully canceled.",
        "testCaseID": 60,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When requested  if a mission is currently active  the MissionPlanner shall cancel the active mission."
        ]
    },
    {
        "Requirement": "The MissionPlanner shall manage predefined FlightPatterns.",
        "testObjective": "Verify that the MissionPlanner manages predefined FlightPatterns.",
        "preconditions": [
            "The application must be running."
        ],
        "testSteps": [
            "1. Add a new FlightPattern.",
            "2. As a user modifies a FlightPattern.",
            "3. As a user removes a FlightPattern."
        ],
        "expectedResult": "The MissionPlanner maintains the predefined FlightPatterns correctly.",
        "testCaseID": 61,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The MissionPlanner shall manage predefined FlightPatterns"
        ]
    },
    {
        "Requirement": "When a flight plan is activated for a UAV currently on the ground the FlightSchedulingandExecution shall notify the UAV to takeoff vertically until it reaches the prescribed altitude.",
        "testObjective": "Verify that when a flight plan is activated for a UAV currently on the ground the FlightSchedulingandExecution notifies the UAV to takeoff vertically until it reaches the prescribed altitude.",
        "preconditions": [
            "The application must be running.",
            "A UAV is on the ground.",
            "A flight plan is selected and activated."
        ],
        "testSteps": [
            "1. Ensure a UAV is on the ground.",
            "2. Activate a flight plan for the selected UAV.",
            "3. As a system, verify that the FlightSchedulingandExecution notifies the UAV to takeoff vertically until it reaches the prescribed altitude."
        ],
        "expectedResult": "The flight plan is activated and the FlightSchedulingandExecution notifies the UAV to takeoff vertically until it reaches the prescribed altitude.",
        "testCaseID": 62,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When a flight plan is activated for a UAV currently on the ground  the FlightSchedulingandExecution shall notify the UAV to takeoff vertically until it reaches the prescribed altitude."
        ]
    },
    {
        "Requirement": "If a flight plan is active and the hover in place command is rescinded the FlightManager shall notify the UAV to continue to the originally designated waypoint.",
        "testObjective": "Verify that when hover in place is rescinded while a flight plan is active the FlightManager notifies the UAV to continue to the originally designated waypoint.",
        "preconditions": [
            "A flight plan is active",
            "The hover in place command is issued and rescinded."
        ],
        "testSteps": [
            "1. Initiate a flight plan.",
            "2. As a user issues hover in place command.",
            "3. As a user rescind the hover in place command.",
            "4. Observe that FlightManager sends a notification to the UAV to continue to the originally designated waypoint."
        ],
        "expectedResult": "FlightManager notifies the UAV to continue to the originally designated waypoint.",
        "testCaseID": 63,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. If a flight plan is active and the hover in place command is rescinded  the FlightManager shall notify the UAV to continue to the originally designated waypoint."
        ]
    },
    {
        "testCaseID": 64,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. If a flight route is assigned to a UAV which is currently hovering in place  the FlightManager shall assign the route and maintain the hover in place mode."
        ]
    },
    {
        "Requirement": "When the hover in place command is issued the FlightManager shall halt the UAV in place and maintain its current position.",
        "testObjective": "Verify that when the hover in place command is issued the FlightManager halts the UAV in place and maintains its current position.",
        "preconditions": [
            "The application must be running.",
            "A hover in place command is available in the command list."
        ],
        "testSteps": [
            "1. Add a flight plan.",
            "2. Initiate the hover in place command.",
            "3. Wait until the UAV is halted and its position is maintained.",
            "4. Verify that the current position is maintained after the command is issued."
        ],
        "expectedResult": "The UAV is halted and maintains its current position after the hover in place command is issued.",
        "testCaseID": 65,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When the hover in place command is issued  the FlightManager shall halt the UAV in place and maintain its current position."
        ]
    },
    {
        "Requirement": "When given two coordinates the CoordinateSystem shall compute the direction from the first coordinate to the second coordinate.",
        "testObjective": "Verify that when given two coordinates the CoordinateSystem computes the correct direction from the first to the second coordinate.",
        "preconditions": [
            "The application must be running.",
            "Two valid coordinates are provided."
        ],
        "testSteps": [
            "1. Enter first coordinate.",
            "2. Enter second coordinate.",
            "3. Compute the direction from first to second coordinate.",
            "4. Verify the computed direction is correct."
        ],
        "expectedResult": "The CoordinateSystem correctly computes and displays the direction from the first to the second coordinate.",
        "testCaseID": 66,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When given two coordinates the CoordinateSystem shall compute the direction from the first coordinate to the second coordinate."
        ]
    },
    {
        "Requirement": "When given two coordinates the CoordinateSystem shall compute the distance between them.",
        "testObjective": "Verify that when given two coordinates the CoordinateSystem computes the distance between them accurately.",
        "preconditions": [
            "The application must be running.",
            "Two distinct coordinates must be provided."
        ],
        "testSteps": [
            "1. Add coordinate 1.",
            "2. Add coordinate 2.",
            "3. Compute distance between the two coordinates.",
            "4. Verify that the computed distance is accurate."
        ],
        "expectedResult": "The distance is accurately computed between the two provided coordinates.",
        "testCaseID": 67,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When given two coordinates the CoordinateSystem shall compute the distance between them."
        ]
    },
    {
        "Requirement": "When requested the CoordinateSystem shall transform coordinates to alternate formats.",
        "testObjective": "Verify that when the CoordinateSystem is requested to transform coordinates, it successfully converts them to alternate formats.",
        "preconditions": [
            "The application must be running.",
            "A coordinate transformation request has been made."
        ],
        "testSteps": [
            "1. Initiate a coordinate transformation request.",
            "2. As the CoordinateSystem, process the request and transform coordinates to alternate formats.",
            "3. Verify that the transformation was successful by checking the alternate format coordinates output."
        ],
        "expectedResult": "The CoordinateSystem successfully transformed the coordinates to the alternate formats as requested.",
        "testCaseID": 68,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When requested  the CoordinateSystem shall transform coordinates to alternate formats."
        ]
    },
    {
        "testCaseID": 69,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When a flight route requires a customized takeoff altitude that differs from the system's default takeoff altitude  it shall be specified in the flight route."
        ]
    },
    {
        "Requirement": "The FlightRouteManager shall persist flight routes.",
        "testObjective": "Verify that the FlightRouteManager persists flight routes.",
        "preconditions": [
            "The application must be running.",
            "Flight routes must be added to the FlightRouteManager."
        ],
        "testSteps": [
            "1. Add flight routes.",
            "2. Verify FlightRouteManager persists flight routes.",
            "3. Log out or restart application if necessary."
        ],
        "expectedResult": "Flight routes are persisted by FlightRouteManager.",
        "testCaseID": 70,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The FlightRouteManager shall persist flight routes."
        ]
    },
    {
        "testCaseID": 71,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The FlightRouteManager shall ensure that all flight routes represent a {{VALIDFLIGHTROUTE}}."
        ]
    },
    {
        "testCaseID": 72,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When the return to home command is issued  the FlightManager shall return the UAV to its original launch location without issuing any additional waypoint or routing commands."
        ]
    },
    {
        "Requirement": "When the GCS loses the connection to an UAV the GCS shall attempt to reconnect.",
        "testObjective": "Verify that when the GCS loses the connection to an UAV the GCS attempts to reconnect.",
        "preconditions": [
            "The application must be running.",
            "A UAV is currently connected to the GCS."
        ],
        "testSteps": [
            "1. Establish a connection between the GCS and an UAV.",
            "2. As the GCS loses the connection to the UAV.",
            "3. Ensure that the GCS attempts to reconnect.",
            "4. Verify that the GCS reconnects successfully.",
            "5. Verify that the GCS reconnects with the correct UAV."
        ],
        "expectedResult": "The GCS successfully attempts to reconnect with the same or another UAV.",
        "testCaseID": 73,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When the GCS loses the connection to an UAV  the GCS shall attempt to reconnect"
        ]
    },
    {
        "Requirement": "The UAVActivationManager shall only activate UAVs that are registered.",
        "testObjective": "Verify that the UAVActivationManager only activates registered UAVs.",
        "preconditions": [
            "The application must be running.",
            "UAVs are being tracked in the system."
        ],
        "testSteps": [
            "1. Register a UAV.",
            "2. Check if the registered UAV is active.",
            "3. Unregister the UAV.",
            "4. Check if the unregistered UAV is inactive."
        ],
        "expectedResult": "Only registered UAVs are active and unregistered UAVs are inactive.",
        "testCaseID": 74,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The UAVActivationManager shall only activate UAVs that are registered."
        ]
    },
    {
        "testCaseID": 75,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When a GCS requests activation of a newly detected UAV  the GCSMiddleware shall forward the request to Dronology."
        ]
    },
    {
        "testCaseID": 76,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When a UAV has an active onboard Obstacle Avoidance  then the ObstacleAvoidance system shall not issue directives"
        ]
    },
    {
        "Requirement": "The ObjectAvoidance system only issues commands within the capabilities of the UAV.",
        "testObjective": "Verify that the ObjectAvoidance system only issues commands within the capabilities of the UAV.",
        "preconditions": [
            "The application must be running.",
            "ObjectAvoidance system is enabled.",
            "UAV has sufficient capabilities."
        ],
        "testSteps": [
            "1. Ensure that ObjectAvoidance is enabled.",
            "2. Verify that the UAV has sufficient capabilities to perform the task.",
            "3. Add an obstacle in the simulation environment.",
            "4. As a user, issue a command to the UAV to navigate around the obstacle.",
            "5. Wait for the UAV to issue a command that avoids the obstacle.",
            "6. Verify that the command issued by the UAV is within the capabilities of the UAV."
        ],
        "expectedResult": "The ObjectAvoidance system issues a command that the UAV can execute without exceeding its capabilities.",
        "testCaseID": 77,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The ObjectAvoidance system only issues commands within the capabilities of the UAV"
        ]
    },
    {
        "testCaseID": 78,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. If a UAV takes evasive actions the system will ensure that it will eventually reach its destination"
        ]
    },
    {
        "testCaseID": 79,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When a stationary or moving object is within the proximity of a UAV the ObjectAvoidance system shall issue evasive directives to the UAV"
        ]
    },
    {
        "Requirement": "The RealTimeFlightUI shall display the location of active UAVs as icons on the map.",
        "testObjective": "Verify that the RealTimeFlightUI displays the location of active UAVs as icons on the map.",
        "preconditions": [
            "The application must be running.",
            "There are one or more active UAVs."
        ],
        "testSteps": [
            "1. Open the application.",
            "2. Ensure that one or more active UAVs are present.",
            "3. Click on the RealTimeFlightUI.",
            "4. Verify that active UAVs are displayed as icons on the map."
        ],
        "expectedResult": "Active UAVs are displayed as icons on the RealTimeFlightUI map.",
        "testCaseID": 80,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The RealTimeFlightUI shall display the location of active UAVs as icons on the map."
        ]
    },
    {
        "Requirement": "When the RealTimeFlightUI is loaded a map shall be displayed.",
        "testObjective": "Verify that when the RealTimeFlightUI is loaded a map is displayed.",
        "preconditions": [
            "The application must be running."
        ],
        "testSteps": [
            "1. Open the RealTimeFlightUI.",
            "2. Wait until the map is displayed."
        ],
        "expectedResult": "The map is displayed.",
        "testCaseID": 81,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When the RealTimeFlightUI is loaded  a map shall be displayed."
        ]
    },
    {
        "testCaseID": 82,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. If a command is issued by the VaadinUI for an UAV  the VaadinUI shall request control of that UAV."
        ]
    },
    {
        "Requirement": "The UIMiddleware shall only assign one control-client at a time for each UAV.",
        "testObjective": "Verify that the UIMiddleware assigns only one control-client per UAV at any given time.",
        "preconditions": [
            "The application must be running.",
            "Multiple control-clients are connected to the system."
        ],
        "testSteps": [
            "1. Connect multiple control-clients to the system.",
            "2. Monitor the UIMiddleware's assignment of control-clients to each UAV.",
            "3. Verify that only one client is assigned per UAV at all times."
        ],
        "expectedResult": "The UIMiddleware assigns only one control-client to each UAV without any conflicts.",
        "testCaseID": 83,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The UIMiddleware shall only assign one control-client at a time for each UAV."
        ]
    },
    {
        "Requirement": "The UIMiddleware shall provide an interface for registering UI clients.",
        "testObjective": "Verify that the UIMiddleware provides an interface for registering UI clients.",
        "preconditions": [
            "The application must be running.",
            "The middleware has been initialized."
        ],
        "testSteps": [
            "1. Add a UI client.",
            "2. As a user registers the UI client via UIMiddleware.",
            "3. Wait until UIMiddleware confirms the UI client registration.",
            "4. Verify that the UI client is listed in the middleware's interface.",
            "5. As a user deregister the UI client.",
            "6. Wait until UIMiddleware confirms the UI client deregistration.",
            "7. Verify that the UI client is no longer listed in the middleware's interface."
        ],
        "expectedResult": "UI clients are correctly registered and deregistered through UIMiddleware's interface.",
        "testCaseID": 84,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The UIMiddleware shall provide an interface for registering UI clients."
        ]
    },
    {
        "Requirement": "When a UAV's current flight is cancelled the SingleUAVFlightPlanScheduler shall in turn cancel all scheduled flight plans for that UAV.",
        "testObjective": "Verify that when a UAV's current flight is cancelled the SingleUAVFlightPlanScheduler cancels all scheduled flight plans for that UAV.",
        "preconditions": [
            "The application must be running.",
            "There is at least one scheduled flight plan for the UAV."
        ],
        "testSteps": [
            "1. Add a flight plan for the UAV.",
            "2. Schedule the flight plan for the UAV.",
            "3. Cancel the UAV's current flight.",
            "4. Wait until all scheduled flight plans for the UAV are cancelled.",
            "5. Verify that the scheduled flight plans have been cancelled."
        ],
        "expectedResult": "All scheduled flight plans for the UAV have been successfully cancelled.",
        "testCaseID": 85,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When a UAV's current flight is cancelled  the SingleUAVFlightPlanScheduler shall in turn cancel all scheduled flight plans for that UAV."
        ]
    },
    {
        "Requirement": "If a UAV has pending flight plans then when it reaches the final waypoint of its current flight plan the SingleUAVFlightPlanScheduler shall execute the next assigned flight plan.",
        "testObjective": "Verify that when a UAV reaches the final waypoint of its current flight plan, the SingleUAVFlightPlanScheduler executes the next assigned flight plan.",
        "preconditions": [
            "The application must be running.",
            "A single UAV has one or more pending flight plans.",
            "The current flight plan has a final waypoint that is reachable and the next assigned flight plan exists.",
            "The SingleUAVFlightPlanScheduler is configured to handle subsequent flight plans."
        ],
        "testSteps": [
            "1. Add a single UAV with multiple pending flight plans.",
            "2. Ensure the current flight plan has a final waypoint.",
            "3. As the UAV reaches the final waypoint, trigger the completion of the current flight plan.",
            "4. Verify that the SingleUAVFlightPlanScheduler executes the next assigned flight plan immediately upon completion of the current flight plan.",
            "5. Observe that the next flight plan is executed as the current one is completed."
        ],
        "expectedResult": "When the current flight plan's final waypoint is reached, the SingleUAVFlightPlanScheduler successfully executes the next assigned flight plan.",
        "testCaseID": 86,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. If a UAV has pending flight plans  then when it reaches the final waypoint of its current flight plan  the SingleUAVFlightPlanScheduler shall execute the next assigned flight plan."
        ]
    },
    {
        "testCaseID": 87,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. If requested  the SingleUAVFlightPlanScheduler shall unassign the flight plan assigned to a UAV that is awaiting execution."
        ]
    },
    {
        "Requirement": "The SingleUAVFlightPlanScheduler shall maintain a managed list of pending flight plans for Each UAV.",
        "testObjective": "Verify that the SingleUAVFlightPlanScheduler maintains a managed list of pending flight plans for Each UAV.",
        "preconditions": [
            "The application must be running.",
            "There is at least one UAV in operation."
        ],
        "testSteps": [
            "1. Add a flight plan for an existing UAV.",
            "2. Modify or remove a flight plan for the same UAV.",
            "3. Verify that the managed list for the UAV is updated to reflect the changes.",
            "4. Remove all flight plans from the UAV's list."
        ],
        "expectedResult": "Flight plans are correctly added, modified, removed, and the list is maintained for each UAV.",
        "testCaseID": 88,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The SingleUAVFlightPlanScheduler shall maintain a managed list of pending flight plans for Each UAV."
        ]
    },
    {
        "Requirement": "When a flight plan is executed the VehicleCore shall send the next waypoint to the UAV.",
        "testObjective": "Verify that when a flight plan is executed the VehicleCore sends the next waypoint to the UAV.",
        "preconditions": [
            "The application must be running.",
            "A flight plan has been executed."
        ],
        "testSteps": [
            "1. Execute a flight plan.",
            "2. As the VehicleCore, send the next waypoint to the UAV.",
            "3. Verify that the next waypoint is sent to the UAV."
        ],
        "expectedResult": "The VehicleCore successfully sends the next waypoint to the UAV after executing the flight plan.",
        "testCaseID": 89,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When a flight plan is executed  the VehicleCore shall send the next waypoint to the UAV."
        ]
    },
    {
        "Requirement": "Each waypoint shall be specified using coordinates that include longitude, latitude, and altitude.",
        "testObjective": "Verify that each waypoint is specified using coordinates that include longitude, latitude, and altitude.",
        "preconditions": [
            "The application must be running.",
            "A flight plan with waypoints must be created."
        ],
        "testSteps": [
            "1. Open the application.",
            "2. Create a flight plan with waypoints including longitude, latitude, and altitude coordinates.",
            "3. Verify that the waypoints are correctly displayed in the flight plan.",
            "4. Attempt to add a waypoint without including all three coordinates.",
            "5. Observe if an error occurs when a waypoint is added without all three coordinates."
        ],
        "expectedResult": "Each waypoint includes longitude, latitude, and altitude coordinates, and adding a waypoint without all three results in an error.",
        "testCaseID": 90,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. Each waypoint shall be specified using coordinates that include longitude  latitude  and altitude."
        ]
    },
    {
        "testCaseID": 91,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The VehicleCore shall associate a {{UAVTYPE}} for each UAV defining its basic attributes."
        ]
    },
    {
        "Requirement": "The UAVActivationManager shall ensure that only one instance of each registered drone is active at any time.",
        "testObjective": "Verify that the UAVActivationManager ensures only one active instance of each registered drone.",
        "preconditions": [
            "The application must be running.",
            "At least one drone is registered.",
            "Multiple drones are registered."
        ],
        "testSteps": [
            "1. Register multiple drones.",
            "2. Activate a drone.",
            "3. Activate another drone.",
            "4. Verify that only one instance of each registered drone is active.",
            "5. Deactivate the first drone.",
            "6. Verify that only one instance of each registered drone remains active."
        ],
        "expectedResult": "Only one active instance per registered drone is maintained.",
        "testCaseID": 92,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The UAVActivationManager shall ensure that only one instance of each registered drone is active at any time."
        ]
    },
    {
        "Requirement": "The SingleUAVFlightPlanScheduler shall only execute one flight plan at a time for each UAV.",
        "testObjective": "Verify that the SingleUAVFlightPlanScheduler executes only one flight plan per UAV at a time.",
        "preconditions": [
            "The application must be running.",
            "There is at least one flight plan pending for a UAV."
        ],
        "testSteps": [
            "1. Add a flight plan for UAV X.",
            "2. Add another flight plan for UAV X.",
            "3. Execute the first flight plan for UAV X.",
            "4. Wait until the second flight plan for UAV X is not executed immediately after the first one."
        ],
        "expectedResult": "Only one flight plan is executed per UAV at a time.",
        "testCaseID": 93,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The SingleUAVFlightPlanScheduler shall only execute one flight plan at a time for each UAV."
        ]
    },
    {
        "Requirement": "The VehicleCore shall assign a unique ID to each activated UAV.",
        "testObjective": "Verify that the VehicleCore assigns a unique ID to each activated UAV.",
        "preconditions": [
            "The application must be running.",
            "At least one UAV is activated."
        ],
        "testSteps": [
            "1. Activate one or more UAVs.",
            "2. Check that each activated UAV has a unique identifier assigned.",
            "3. Verify that no two activated UAVs share the same ID."
        ],
        "expectedResult": "All activated UAVs have unique IDs assigned without duplication.",
        "testCaseID": 94,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. The VehicleCore shall assign a unique ID to each activated UAV."
        ]
    },
    {
        "Requirement": "If a client registers for notifications the UIMiddleware shall send notifications for specific events.",
        "testObjective": "Verify that the UIMiddleware sends notifications for specific events when a client registers for notifications.",
        "preconditions": [
            "The application must be running.",
            "A client has registered for notifications."
        ],
        "testSteps": [
            "1. Register a client for notifications.",
            "2. Trigger a specific event.",
            "3. Wait until UIMiddleware sends a notification to the client."
        ],
        "expectedResult": "Notifications are sent to the client for the registered specific events.",
        "testCaseID": 95,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. If a client registers for notifications  the UIMiddleware shall send notifications for specific events"
        ]
    },
    {
        "testCaseID": 96,
        "prompt": [
            "You are an expert software tester for Unmanned Aerial Systems (UAS). Reply using json.\n\nEXAMPLE INPUT REQUIREMENT:\nWhen a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\n\nEXAMPLE JSON OUTPUT:\n{\n    \"Requirement\": \"When a user cancels a pending flight plan the RouteAssignmentUI shall notify Dronology.\",\n    \"testObjective\": \"Verify that when a user cancels a pending flight plan the RouteAssignmentUI notifies Dronology.\",\n    \"preconditions\": [\n        \"The application must be running.\",\n        \"One or more flight plans are pending.\"\n    ],\n    \"testSteps\": [\n        \"1. Add one or more flight plans.\",\n        \"2. As a user cancel a flight plan.\",\n        \"3. Wait until RouteAssignmentUI notifies Dronology.\"\n    ],\n    \"expectedResult\": \"Flight plan is canceled and Dronology received notification from RouteAssignmentUI.\"\n}",
            "Generate json test description for the following requirement. When requested  the VehicleCore shall shall transition the UAV between states according to allowed state transitions as depicted in the UAV state transition diagram"
        ]
    }
]